---
title: "EDS 240 - Lab #1"
author: "Josephine Cardelle"
format: html
editor_options: 
  chunk_output_type: console
---

# Load Libraries
```{r}
library(tidyverse)
library(here)
library(janitor)
library(usdata)
```

# Read in data
```{r}
fracking <- read_csv(here("week1/data/registryupload_1.csv"))
```


# Data Exploration
```{r}
dim(fracking) # Dimensions
str(fracking) # Structure of data
View(fracking)

```

# Clean Fracking Data
```{r}
# Convert all column names from CamelCase to snake_case
fracking_clean <- fracking %>% 
  clean_names() %>% 

# Remove "AM" from the job_start_date column observations
  mutate(job_start_date = str_remove(job_start_date, " AM")) %>% 
  
# Convert observations in the job_start_date column from character strings to datetime objects and save them to a new column named datetime_start  
  mutate(datetime_start = mdy_hms(job_start_date)) %>% 

# Add a column named year that contains only the year from datetime_start  
  mutate(year = year(datetime_start)) %>% 

# keep only the necessary columns (datetime_start, year, state_name, well_name, total_base_water_volume)
  select(datetime_start, year, state_name, well_name, total_base_water_volume) %>% 

# Convert all observations in the state_name column to Title Case
  mutate(state_name = str_to_title(state_name)) %>% 
  
# remove any rows where the state name ends in ?    
  filter(!str_detect(string = state_name, pattern = "\\?")) %>% 
  
# Convert any state abbreviations to full names in the state_name column
  mutate(state_name = ifelse(test = str_length(state_name) == 2,
                             yes = abbr2state(state_name),
                             no = state_name)) %>% 

# Correct any misspelled state names in the state_name column    
  mutate(state_name = case_when(
    state_name == "Colordao" ~ "Colorado",
    state_name == "Loiusiana" ~ "Louisiana",
    state_name == "Louisianna" ~ "Louisiana",
    state_name == "Lousiana" ~ "Louisiana",
    state_name == "New Mexcio" ~ "New Mexico",
    state_name == "Norh Dakota" ~ "North Dakota",
    state_name == "Norht Dakota" ~ "North Dakota",
    state_name == "North  Dakota" ~ "North Dakota",
    state_name == "North Dakata" ~ "North Dakota",
    state_name == "North Dakotta" ~ "North Dakota",
    state_name == "Noth Dakota" ~ "North Dakota",
    state_name == "Pennslvania" ~ "Pennsylvania",
    state_name == "Pennsylavania" ~ "Pennsylvania",
    state_name == "Pennsylvanya" ~ "Pennsylvania",
    state_name == "Penssylvania" ~ "Pennsylvania",
    state_name == "Texasa" ~ "Texas",
    state_name == "Texs" ~ "Texas", 
    state_name == "West Viginia" ~ "West Virginia",
    state_name == "Wyominng" ~ "Wyoming", 
    TRUE ~ state_name # copy over rest of state names from as-is
  )) %>% 

# Remove any rows that do not have a true US state name in the state_name column
  filter(!state_name %in% c("Beaver", "Beckham", "Harper", "Hemphill", "Midland", "Red River", "Roosevelt", "Rusk", "State", "Ward")) %>% 

# Add a column named state_abb with just US state abbreviations
  mutate(state_abb = state2abbr(state_name)) %>% 
  
# Move the state_abb column so that it sits immediately after the state_name column 
  relocate(state_abb, .after = state_name) %>% 
  
# Rename total_base_water_volume as total_base_water_volume_gal
  rename(total_base_water_volume_gal = total_base_water_volume) %>% 
  
# Remove any observations that donâ€™t have a measurement for total_base_water_volume_gal
  drop_na(total_base_water_volume_gal) %>% 
  
# Reorder rows from earliest to most recent datetime_start values
  arrange(datetime_start)




```

